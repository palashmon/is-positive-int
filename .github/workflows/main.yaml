name: CI

on:
  push:
    branches: ['master']
  pull_request:
    types: [opened, synchronize, reopened]
    branches: ['master']
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Node.js ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 21
          - 20
          - 18
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm test

  automerge:
    name: Dependabot Auto-Merge
    needs: test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: fastify/github-action-merge-dependabot@v3
        with:
          github-token: ${{ github.token }}
          target: minor

  changelog:
    name: Changelog
    needs:
      - test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      skipped: ${{ steps.changelog.outputs.skipped }}
      tag: ${{ steps.changelog.outputs.tag }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      version: ${{ steps.changelog.outputs.version }}

    env:
      PR_BRANCH: release/ci-${{ github.sha }}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Create release branch
        run: |
          git checkout -b ${{ env.PR_BRANCH }}

      - name: Create Changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          git-user-name: "github-actions"
          git-user-email: "github-actions[bot]@users.noreply.github.com"
          git-branch: ${{ env.PR_BRANCH }}
          skip-git-pull: true
          output-file: false
          create-summary: true
          skip-on-empty: false
          release-count: 10

      # create PR using GitHub CLI
      - name: Create Changelog PR
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr create --base master --head ${{ env.PR_BRANCH }} --title 'chore(release): update package version ${{ steps.changelog.outputs.tag }} [skip-ci]' --body '${{ steps.changelog.outputs.clean_changelog }}'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge Changelog PR
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr merge --squash --auto --delete-branch ${{ env.PR_BRANCH }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    needs: changelog
    if: github.event_name != 'pull_request' && needs.changelog.outputs.skipped == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Release info is now in the main so we can continue as before
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          draft: false
          makeLatest: true
          allowUpdates: true
          skipIfReleaseExists: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.changelog.outputs.tag }}
          name: ${{ needs.changelog.outputs.tag }}
          body: ${{ needs.changelog.outputs.clean_changelog }}
